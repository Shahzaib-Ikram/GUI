{ init: [Function: init],
  start: [Function: start],
  stop: [Function: stop],
  log:
   { FATAL: 10,
     ERROR: 20,
     WARN: 30,
     INFO: 40,
     DEBUG: 50,
     TRACE: 60,
     AUDIT: 98,
     METRIC: 99,
     init: [Function: init],
     addHandler: [Function: addHandler],
     removeHandler: [Function: removeHandler],
     log: [Function: log],
     info: [Function: info],
     warn: [Function: warn],
     error: [Function: error],
     trace: [Function: trace],
     debug: [Function: debug],
     metric: [Function: metric],
     audit: [Function: audit],
     _: [Function] },
  util:
   { encodeObject: [Function: encodeObject],
     ensureString: [Function: ensureString],
     ensureBuffer: [Function: ensureBuffer],
     cloneMessage: [Function: cloneMessage],
     compareObjects: [Function: compareObjects],
     generateId: [Function: generateId],
     getMessageProperty: [Function: getMessageProperty],
     setMessageProperty: [Function: setMessageProperty],
     getObjectProperty: [Function: getObjectProperty],
     setObjectProperty: [Function: setObjectProperty],
     evaluateNodeProperty: [Function: evaluateNodeProperty],
     normalisePropertyExpression: [Function: normalisePropertyExpression],
     normaliseNodeTypeName: [Function: normaliseNodeTypeName],
     prepareJSONataExpression: [Function: prepareJSONataExpression],
     evaluateJSONataExpression: [Function: evaluateJSONataExpression],
     parseContextStore: [Function: parseContextStore] },
  nodes: [Getter],
  events:
   EventEmitter {
     _events:
      [Object: null prototype] {
        'type-registered': [Function],
        'node-status': [Function: handleStatusEvent],
        'runtime-event': [Function: handleRuntimeEvent],
        comms: [Function: handleCommsEvent],
        'event-log': [Function: handleEventLog] },
     _eventsCount: 5,
     _maxListeners: undefined },
  settings: [Getter],
  version: [Getter],
  httpAdmin: [Getter],
  httpNode: [Getter],
  server: [Getter],
  runtime:
   { init: [Function: init],
     start: [Function: start],
     stop: [Function: stop],
     comms:
      { init: [Function: init],
        addConnection: [Function: addConnection],
        removeConnection: [Function: removeConnection],
        subscribe: [Function: subscribe],
        unsubscribe: [Function: unsubscribe] },
     flows:
      { init: [Function: init],
        getFlows: [Function: getFlows],
        setFlows: [Function: setFlows],
        addFlow: [Function: addFlow],
        getFlow: [Function: getFlow],
        updateFlow: [Function: updateFlow],
        deleteFlow: [Function: deleteFlow],
        getNodeCredentials: [Function: getNodeCredentials] },
     library:
      { init: [Function: init],
        getEntry: [Function: getEntry],
        saveEntry: [Function: saveEntry],
        getEntries: [Function: getEntries] },
     nodes:
      { init: [Function: init],
        getNodeInfo: [Function: getNodeInfo],
        getNodeList: [Function: getNodeList],
        getNodeConfig: [Function: getNodeConfig],
        getNodeConfigs: [Function: getNodeConfigs],
        getModuleInfo: [Function: getModuleInfo],
        addModule: [Function: addModule],
        removeModule: [Function: removeModule],
        setModuleState: [Function: setModuleState],
        setNodeSetState: [Function: setNodeSetState],
        getModuleCatalogs: [Function: getModuleCatalogs],
        getModuleCatalog: [Function: getModuleCatalog],
        getIconList: [Function: getIconList],
        getIcon: [Function: getIcon] },
     settings:
      { init: [Function: init],
        getRuntimeSettings: [Function: getRuntimeSettings],
        getUserSettings: [Function: getUserSettings],
        updateUserSettings: [Function: updateUserSettings],
        getUserKeys: [Function: getUserKeys],
        getUserKey: [Function: getUserKey],
        generateUserKey: [Function: generateUserKey],
        removeUserKey: [Function: removeUserKey] },
     projects:
      { init: [Function: init],
        available: [Function: available],
        listProjects: [Function: listProjects],
        createProject: [Function: createProject],
        initialiseProject: [Function: initialiseProject],
        getActiveProject: [Function: getActiveProject],
        setActiveProject: [Function: setActiveProject],
        getProject: [Function: getProject],
        updateProject: [Function: updateProject],
        deleteProject: [Function: deleteProject],
        getStatus: [Function: getStatus],
        getBranches: [Function: getBranches],
        getBranchStatus: [Function: getBranchStatus],
        setBranch: [Function: setBranch],
        deleteBranch: [Function: deleteBranch],
        commit: [Function: commit],
        getCommit: [Function: getCommit],
        getCommits: [Function: getCommits],
        abortMerge: [Function: abortMerge],
        resolveMerge: [Function: resolveMerge],
        getFiles: [Function: getFiles],
        getFile: [Function: getFile],
        stageFile: [Function: stageFile],
        unstageFile: [Function: unstageFile],
        revertFile: [Function: revertFile],
        getFileDiff: [Function: getFileDiff],
        getRemotes: [Function: getRemotes],
        addRemote: [Function: addRemote],
        removeRemote: [Function: removeRemote],
        updateRemote: [Function: updateRemote],
        pull: [Function: pull],
        push: [Function: push] },
     context:
      { init: [Function: init],
        getValue: [Function: getValue],
        delete: [Function: delete] },
     isStarted: [Function: isStarted],
     version: [Function: version],
     storage:
      { init: [Function: init],
        getFlows: [Function: getFlows],
        saveFlows: [Function: saveFlows],
        saveCredentials: [Function: saveCredentials],
        getSettings: [Function: getSettings],
        saveSettings: [Function: saveSettings],
        getSessions: [Function: getSessions],
        saveSessions: [Function: saveSessions],
        getLibraryEntry: [Function: getLibraryEntry],
        saveLibraryEntry: [Function: saveLibraryEntry],
        getAllFlows: [Function: getAllFlows],
        getFlow: [Function: getFlow],
        saveFlow: [Function: saveFlow],
        projects: [Object] },
     events:
      EventEmitter { _events: [Object], _eventsCount: 5, _maxListeners: undefined },
     util:
      { encodeObject: [Function: encodeObject],
        ensureString: [Function: ensureString],
        ensureBuffer: [Function: ensureBuffer],
        cloneMessage: [Function: cloneMessage],
        compareObjects: [Function: compareObjects],
        generateId: [Function: generateId],
        getMessageProperty: [Function: getMessageProperty],
        setMessageProperty: [Function: setMessageProperty],
        getObjectProperty: [Function: getObjectProperty],
        setObjectProperty: [Function: setObjectProperty],
        evaluateNodeProperty: [Function: evaluateNodeProperty],
        normalisePropertyExpression: [Function: normalisePropertyExpression],
        normaliseNodeTypeName: [Function: normaliseNodeTypeName],
        prepareJSONataExpression: [Function: prepareJSONataExpression],
        evaluateJSONataExpression: [Function: evaluateJSONataExpression],
        parseContextStore: [Function: parseContextStore] },
     httpNode: [Getter],
     httpAdmin: [Getter],
     server: [Getter],
     _:
      { version: [Function: getVersion],
        log: [Getter],
        i18n: [Getter],
        settings: [Object],
        storage: [Object],
        events: [EventEmitter],
        nodes: [Object],
        library: [Object],
        exec: [Object],
        util: [Object],
        adminApi: [Getter],
        adminApp: [Getter],
        nodeApp: [Getter],
        server: [Getter],
        isStarted: [Function: isStarted] } },
  auth: { needsPermission: [Function: needsPermission] } }